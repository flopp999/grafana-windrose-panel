{"version":3,"sources":["../src/series_overrides_ctrl.js"],"names":["angular","$","_","module","controller","$scope","$element","popoverSrv","overrideMenu","currentOverrides","override","addOverrideOption","name","propertyName","values","option","text","index","length","submenu","map","value","String","push","setOverride","item","subItem","openColorSelector","addSeriesOverride","alias","lines","updateCurrentOverrides","ctrl","render","colorSelected","color","show","element","find","position","openOn","template","model","autoClose","onClose","removeOverride","refresh","getSeriesNames","seriesList","series","each","isUndefined"],"mappings":"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","file":"series_overrides_ctrl.js","sourcesContent":["import angular from 'angular';\nimport $ from 'jquery';\nimport _ from 'lodash';\n\nangular.module('grafana.controllers').controller('SeriesOverridesCtrl', function($scope, $element, popoverSrv) {\n    $scope.overrideMenu = [];\n    $scope.currentOverrides = [];\n    $scope.override = $scope.override || {};\n\n    $scope.addOverrideOption = function(name, propertyName, values) {\n      var option = {};\n      option.text = name;\n      option.propertyName = propertyName;\n      option.index = $scope.overrideMenu.length;\n      option.values = values;\n\n      option.submenu = _.map(values, function(value) {\n        return { text: String(value), value: value };\n      });\n\n      $scope.overrideMenu.push(option);\n    };\n\n    $scope.setOverride = function(item, subItem) {\n      // handle color overrides\n      if (item.propertyName === 'color') {\n        $scope.openColorSelector();\n        return;\n      }\n\n      $scope.override[item.propertyName] = subItem.value;\n\n      // automatically disable lines for this series and the fill bellow to series\n      // can be removed by the user if they still want lines\n      if (item.propertyName === 'fillBelowTo') {\n        $scope.override['lines'] = false;\n        $scope.addSeriesOverride({ alias: subItem.value, lines: false });\n      }\n\n      $scope.updateCurrentOverrides();\n      $scope.ctrl.render();\n    };\n\n    $scope.colorSelected = function(color) {\n      $scope.override['color'] = color;\n      $scope.updateCurrentOverrides();\n      $scope.ctrl.render();\n    };\n\n    $scope.openColorSelector = function() {\n      popoverSrv.show({\n        element: $element.find(\".dropdown\")[0],\n        position: 'top center',\n        openOn: 'click',\n        template: '<gf-color-picker></gf-color-picker>',\n        model: {\n          autoClose: true,\n          colorSelected: $scope.colorSelected,\n        },\n        onClose: function() {\n          $scope.ctrl.render();\n        }\n      });\n    };\n\n    $scope.removeOverride = function(option) {\n      delete $scope.override[option.propertyName];\n      $scope.updateCurrentOverrides();\n      $scope.ctrl.refresh();\n    };\n\n    $scope.getSeriesNames = function() {\n      return _.map($scope.ctrl.seriesList, function(series) {\n        return series.alias;\n      });\n    };\n\n    $scope.updateCurrentOverrides = function() {\n      $scope.currentOverrides = [];\n      _.each($scope.overrideMenu, function(option) {\n        var value = $scope.override[option.propertyName];\n        if (_.isUndefined(value)) { return; }\n        $scope.currentOverrides.push({\n          name: option.text,\n          propertyName: option.propertyName,\n          value: String(value)\n        });\n      });\n    };\n\n    $scope.addOverrideOption('Bars', 'bars', [true, false]);\n    $scope.addOverrideOption('Lines', 'lines', [true, false]);\n    $scope.addOverrideOption('Line fill', 'fill', [0,1,2,3,4,5,6,7,8,9,10]);\n    $scope.addOverrideOption('Line width', 'linewidth', [0,1,2,3,4,5,6,7,8,9,10]);\n    $scope.addOverrideOption('Points', 'points', [true, false]);\n    $scope.addOverrideOption('Points Radius', 'pointradius', [1,2,3,4,5]);\n    $scope.addOverrideOption('Color', 'color', ['change']);\n    $scope.addOverrideOption('Z-index', 'zindex', [-3,-2,-1,0,1,2,3]);\n    $scope.updateCurrentOverrides();\n});\n"]}